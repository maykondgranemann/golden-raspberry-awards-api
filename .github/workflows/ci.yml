name: CI Pipeline

on:
  push:
    branches:
      - develop
      - homolog
      - main
  pull_request:
    branches:
      - develop
      - homolog
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.1"

      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Rodar Testes (pytest)
        run: |
          poetry run pytest --maxfail=3 --disable-warnings

      - name: Checagem de C√≥digo (black, flake8, mypy)
        run: |
          poetry run black --check .
          poetry run flake8
          poetry run mypy app

      - name: Build da Imagem Docker
        run: |
          docker build -t zuplae/golden-raspberry-awards-api:latest -f infrastructure/Dockerfile .

      - name: Login no Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push da Imagem para o Docker Hub
        run: |
          docker push zuplae/golden-raspberry-awards-api:latest

      - name: Criar credencial do GCP a partir do Secret
        run: echo '${{ secrets.GCP_SA_KEY }}' > gcp-sa-key.json

      - name: Autenticar no Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: üõ†Ô∏è Configurar gcloud CLI
        run: |
          gcloud auth activate-service-account --key-file=gcp-sa-key.json
          gcloud config set project SEU_GCP_PROJECT_ID
          gcloud config set compute/zone us-central1-a
          gcloud container clusters get-credentials golden-cluster --region us-central1

      - name: Configurar Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Deploy no Kubernetes (GKE)
        run: |
          kubectl apply -f infrastructure/deployment.yaml
          kubectl rollout status deployment golden-raspberry-awards
